ret <- RunNetMHCIIPan(seqfile = seqfile, alleles = "DRB1_0101")
seqfile
file.exists(seqfile)
seqfile
## run for a unique allele for MHC II
ret <- RunNetMHCIIPan(seqfile = "/home/elmer/file12a35120a3ff.fasta", alleles = "DRB1_0101")
seqfile
s1
binders
seqfile <- paste(getwd(),"filetest.fasta",sep="")
seqfile
seqfile <- file.path(getwd(),"filetest.fasta")
seqfile
.libPaths()
seqfile <- file.path(.libPaths()[1],"filetest.fasta")
seqfile
seqfile
write.fasta(myseq, file.out = seqfile,
name = "NA H5N1 .[(GenBank: AAC32089.1) short sequence]")
if(!file.exists(seqfile)){
stop("ERROR: pls check path")
}
## run for a unique allele for MHC II
ret <- RunNetMHCIIPan(seqfile = seqfile, alleles = "DRB1_0101")
ret
View(ret)
##how many Strong and Waek Binders?
table(ret$Type)
t <- Sys.time()
ret <- RunNetMHCPan(seqfile = seqfile, allele = "HLA-A01:01")
print(t - Sys.time())
17*4
17*2
t <- Sys.time()
ret <- RunMHCAlleles(seqfile = seqfile, alleleList = list(c("HLA-A01:01","HLA-A02:01",c("HLA-A03:01","HLA-A24:02"))))
print(Sys.time()-t)
t <- Sys.time()
ret <- RunMHCAlleles(seqfile = seqfile, alleleList = list(c("HLA-A01:01","HLA-A02:01"),c("HLA-A03:01","HLA-A24:02")))
print(Sys.time()-t)
al.list <- list(L1=c("DRB1_0101","DRB1_0102"), L2=c("DRB1_0103","DRB1_0104"))
t <- Sys.time()
ret <- RunMHCIIAlleles(seqfile = seqfile, alleleList = al.list)
print(Sys.time()-t)
ret
# SB WB
# 1 16
file.remove(seqfile)
##how many Strong and Weak Binders?
table(ret$Type)
library(stringr)
library(RAPInetMHCpan)
library(openxlsx)
mchii <- FormatOut(readRDS("/home/elmer/Elmer/Covid19/YP_009724390.1.fasta_MHCII.RDS"))
mhci <- FormatOut(readRDS(file = "/home/elmer/Elmer/Covid19/YP_009724390.1.fasta_MHC.RDS")
)
SaveExcel(mchii, "/home/elmer/Elmer/Covid19/YP_009724390.1.fasta_MHCII.xlsx")
SaveExcel(mhci, "/home/elmer/Elmer/Covid19/YP_009724390.1.fasta_MHCI.xlsx")
##number of Strong and Weah MHC II binders
table(mchii$Type)
##number of Strong and Weah MHC I binders
table(mhci$Type)
length(unique(subset(mhcii,Type == "SB")$Peptide))
length(unique(subset(mchii,Type == "SB")$Peptide))
# [1] 279
length(unique(subset(mchii,Type == "WB")$Peptide))
length(unique(subset(mhci,Type == "SB")$Peptide))
# [1] 1320
length(unique(subset(mhci,Type == "WB")$Peptide))
library(stringr)
library(RAPInetMHCpan)
library(openxlsx)
mchii <- FormatOut(readRDS("/home/elmer/Elmer/Covid19/YP_009724390.1.fasta_MHCII.RDS"))
mhci <- FormatOut(readRDS(file = "/home/elmer/Elmer/Covid19/YP_009724390.1.fasta_MHC.RDS"))
View(mhci:1:10,])
View(mhci[1:10,])
View(mhci[1:20,])
library(stringr)
library(RAPInetMHCpan)
library(openxlsx)
mchii <- FormatOut(readRDS("/home/elmer/Elmer/Covid19/YP_009724390.1.fasta_MHCII.RDS"))
mhci <- FormatOut(readRDS(file = "/home/elmer/Elmer/Covid19/YP_009724390.1.fasta_MHC.RDS"))
head(mhci)
eDB <- mhci
group <- do.call(rbind,str_split(eDB$Allele,"*"))[,1]
group <- do.call(rbind,str_split(eDB$Allele,"\*"))[,1]
group <- do.call(rbind,str_split(eDB$Allele,"\\*"))[,1]
head(group)
group <- do.call(rbind,str_split(eDB$Allele,"\\*"))
head(group)
genes <- do.call(rbind, str_split(group[,2],":"))
head(genes)
group <- data.frame(Group = gourp[,1], Gene=genes[,1], Variant = genes[,2])
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
id <- which(group$Group == "HLA-A")
upep <- unique(eDB$Peptide)
id <- which(eDB$Peptide == upep[1])
length(id)
table(group$Group[id])
length(upep)
legth(unique(eDB$InterCore))
length(unique(eDB$InterCore))
upep <- unique(eDB$Peptide[eDB$Type == "SB"])
length(upep)
tab <- do.call(do.call, lapply(upep, function(x){
id <- which(eDB$Peptide == x)
table(group$Group[id])
}))
tab <-  lapply(upep, function(x){
id <- which(eDB$Peptide == x)
table(group$Group[id])
})
tab[[1]]
ll<- unlist(lapply(tab,length))
summary(ll)
ll<- do.call(rbind,tab)
head(ll)
rownames(ll) <- upep
head(ll)
tab <-  lapply(upep, function(x){
id <- which(eDB$Peptide == x)
c(Pos =eDB$Pos[id][1], table(group$Group[id]))
})
ll<- do.call(rbind,tab)
rownames(ll) <- upep
head(ll)
.Summary <- function(db, type){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
upep <- db[,type]
tab <-  lapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
})
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
Summary <- function(eDB, file){
if("RAPIMHC" %in% class(eDB)){
SB <- list(Peptides = .Summary(subset(eDB, Type = "SB"), type = "Peptide"),
InteractionCores = .Summary(subset(eDB, Type = "SB"), type = "InterCore"))
WB <- list(Peptides = .Summary(subset(eDB, Type = "WB"), type = "Peptide"),
InteractionCores = .Summary(subset(eDB, Type = "WB"), type = "InterCore"))
}else{
SB <- list(Peptides = .Summary(subset(eDB, Type = "SB"), type = "Peptide"))
WB <- list(Peptides = .Summary(subset(eDB, Type = "WB"), type = "Peptide"))
}
return(list(SB=SB,WB=WB))
}
Pep <- Summary(mhci)
sb <- .Summary(subset(eDB, Type = "SB"), type = "Peptide")
library(BiocParallel)
.Summary <- function(db, type){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
upep <- db[,type]
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
Summary <- function(eDB, file){
if("RAPIMHC" %in% class(eDB)){
SB <- list(Peptides = .Summary(subset(eDB, Type == "SB"), type = "Peptide"),
InteractionCores = .Summary(subset(eDB, Type == "SB"), type = "InterCore"))
WB <- list(Peptides = .Summary(subset(eDB, Type == "WB"), type = "Peptide"),
InteractionCores = .Summary(subset(eDB, Type = "WB"), type = "InterCore"))
}else{
SB <- list(Peptides = .Summary(subset(eDB, Type == "SB"), type = "Peptide"))
WB <- list(Peptides = .Summary(subset(eDB, Type == "WB"), type = "Peptide"))
}
return(list(SB=SB,WB=WB))
}
Pep <- Summary(mhci)
db <- subset(eDB, Type == "SB")
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
upep <- db[,type]
type <- "Peptide"
upep <- db[,type]
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
head(ll)
Summary <- function(eDB, file){
if("RAPIMHC" %in% class(eDB)){
SB <- list(Peptides = .Summary(subset(eDB, Type == "SB"), type = "Peptide"),
InteractionCores = .Summary(subset(eDB, Type == "SB"), type = "InterCore"))
print("Task SB done")
WB <- list(Peptides = .Summary(subset(eDB, Type == "WB"), type = "Peptide"),
InteractionCores = .Summary(subset(eDB, Type = "WB"), type = "InterCore"))
}else{
SB <- list(Peptides = .Summary(subset(eDB, Type == "SB"), type = "Peptide"))
WB <- list(Peptides = .Summary(subset(eDB, Type == "WB"), type = "Peptide"))
}
return(list(SB=SB,WB=WB))
}
.Summary <- function(db, type){
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
upep <- db[,type]
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
Summary <- function(eDB, file){
if("RAPIMHC" %in% class(eDB)){
print("Task 1 run\n")
SB <- list(Peptides = .Summary(subset(eDB, Type == "SB"), type = "Peptide"),
InteractionCores = .Summary(subset(eDB, Type == "SB"), type = "InterCore"))
print("Task SB done")
WB <- list(Peptides = .Summary(subset(eDB, Type == "WB"), type = "Peptide"),
InteractionCores = .Summary(subset(eDB, Type = "WB"), type = "InterCore"))
}else{
SB <- list(Peptides = .Summary(subset(eDB, Type == "SB"), type = "Peptide"))
WB <- list(Peptides = .Summary(subset(eDB, Type == "WB"), type = "Peptide"))
}
return(list(SB=SB,WB=WB))
}
class(mhci)
class(mhci) <- c("RAPIMHC", class(mhci))
Pep <- Summary(mhci)
dim(Pep$SB$Peptides)
head(Pep$SB$Peptides)
.Summary <- function(db, type){
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
upep <- unique(db[,type])
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
Pep <- Summary(mhci)
dim(Pep$SB$Peptides)
dim(Pep$SB$InteractionCores)
write.xlsx(Pep$SB, file = "/home/elmer/SB.summary.xlsx")
write.xlsx(Pep$SB, file = "/home/elmer/SB.summary.xlsx", rowNames = TRUE)
class(mchii)
class(mchii) <- c("RAPIMHCII", class(mchii))
PepII <- Summary(mchii)
head(mchii$Allele)
levels(mchii$Allele)
head(mchii)
table(do.call(rbind, str_split(mchii$Allele,"_"))[,1])
str_split(mchii$Allele[1],"_"))
str_split(mchii$Allele[1],"_")
tail(mchii)
.Summary <- function(db, type){
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
if("RAPIMHC" %in% class(db)){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
}else{
group$Group <- do.call(rbind,str_split(mchii$Allele[1],"_"))[,1]
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
}
upep <- unique(db[,type])
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
Pep <- Summary(mhci)
class(mhci) <- c("RAPIMHCII", class(mhci))
class(mhci)
class(mhci) <- c("RAPIMHC", "data.frame")
class(mchii)
PepII <- Summary(mchii)
dim(PepII$SB)
dim(PepII$SB$Peptides)
dim(PepII$WB$Peptides)
write.xlsx(Pep$SB, file ="/home/elmer/Elmer/Covid19/YP_009724390.1.MHCI_SB.xlsx")
write.xlsx(Pep$SB, file ="/home/elmer/Elmer/Covid19/YP_009724390.1.MHCI_SB.xlsx", rowNames=TRUE)
write.xlsx(Pep$WB, file ="/home/elmer/Elmer/Covid19/YP_009724390.1.MHCI_WB.xlsx", rowNames=TRUE)
write.xlsx(PepII$SB, file ="/home/elmer/Elmer/Covid19/YP_009724390.1.MHCII_SB.xlsx", rowNames=TRUE)
write.xlsx(PepII$WB, file ="/home/elmer/Elmer/Covid19/YP_009724390.1.MHCII_WB.xlsx", rowNames=TRUE)
print(table(group$Group))
.Summary <- function(db, type){
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
if("RAPIMHC" %in% class(db)){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
}else{
group$Group <- do.call(rbind,str_split(mchii$Allele[1],"_"))[,1]
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
}
upep <- unique(db[,type])
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
PepII <- Summary(mchii)
db <- subset(mchii, Type == "SB")
group$Group <- do.call(rbind,str_split(db$Allele[1],"_"))[,1]
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
db <- subset(mchii, Type == "WB")
group$Group <- do.call(rbind,str_split(db$Allele[1],"_"))[,1]
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
head(db$Allele)
group$Group <- as.character(do.call(rbind,str_split(db$Allele[1],"_"))[,1])
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
db <- subset(mchii, Type == "WB")
group$Group <- as.character(do.call(rbind,str_split(db$Allele[1],"_"))[,1])
head(group$Group)
unique((group$Group))
tail(db$Allele)
haed(db$Allele)
head(db$Allele)
str_split(db$Allele[1],"_")
str_split(db$Allele[1000],"_")
str_split(db$Allele[3000],"_")
ll <- str_split(db$Allele,"_")
ll[[1]]
ll[[1]][1]
ll <- unlist(lapply(ll, function(x) x[1]))
ll[1:10]
tail(ll)
ll[str_detect(ll, "HLA")] <- "HLA"
tail(ll)
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
if("RAPIMHC" %in% class(db)){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
}else{
group$Group <- str_split(db$Allele[1],"_")
group$Group <- unlist(lapply(group$Group, function(x) x[1]))
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
}
.Summary <- function(db, type){
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
if("RAPIMHC" %in% class(db)){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
}else{
group$Group <- str_split(db$Allele[1],"_")
group$Group <- unlist(lapply(group$Group, function(x) x[1]))
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
}
upep <- unique(db[,type])
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
PepII <- Summary(mchii)
class(mchii)
.Summary <- function(db, type){
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
print(class(db))
if("RAPIMHC" %in% class(db)){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
}else{
group$Group <- str_split(db$Allele[1],"_")
group$Group <- unlist(lapply(group$Group, function(x) x[1]))
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
}
upep <- unique(db[,type])
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
PepII <- Summary(mchii)
db <- subset(mchii, Type =="SB")
group$Group <- str_split(db$Allele[1],"_")
group$Group <- unlist(lapply(group$Group, function(x) x[1]))
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
head(group$Group)
tail(group$Group)
db <- subset(mchii, Type =="SB")
group$Group <- str_split(db$Allele[1],"_")
group$Group[[3000]]
group$Group[[4000]]
group$Group[[10000]]
tail(db$Allele)
.Summary <- function(db, type){
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
print(class(db))
if("RAPIMHC" %in% class(db)){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
}else{
# db <- subset(mchii, Type =="SB")
group$Group <- str_split(db$Allele,"_")
group$Group <- unlist(lapply(group$Group, function(x) x[1]))
group$Group[str_detect(group$Group,"HLA")] <- "HLA"
print(table(group$Group))
}
upep <- unique(db[,type])
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
PepII <- Summary(mchii)
db <- subset(mchii, Type =="SB")
group$Group <- str_split(db$Allele,"_")
db <- subset(mchii, Type =="SB")
Group <- str_split(db$Allele,"_")
Group <- unlist(lapply(group$Group, function(x) x[1]))
Group[str_detect(group$Group,"HLA")] <- "HLA"
group <- data.frame(Group=Group)
db <- subset(mchii, Type =="SB")
Group <- str_split(db$Allele,"_")
Group <- unlist(lapply(group$Group, function(x) x[1]))
Group[str_detect(Group,"HLA")] <- "HLA"
Group <- str_split(db$Allele,"_")
Group <- unlist(lapply(group$Group, function(x) x[1]))
Group[str_detect(Group,"HLA")] <- "HLA"
Group <- str_split(db$Allele,"_")
Group <- unlist(lapply(group$Group, function(x) as.character(x[1])))
Group[str_detect(Group,"HLA")] <- "HLA"
group <- data.frame(Group=Group)
print(table(group$Group))
db <- subset(mchii, Type =="SB")
Group <- str_split(db$Allele,"_")
head(Group)
tail(Group)
db <- subset(mchii, Type =="SB")
Group <- str_split(db$Allele,"_")
Group <- unlist(lapply(Group, function(x) as.character(x[1])))
Group[str_detect(Group,"HLA")] <- "HLA"
group <- data.frame(Group=Group)
print(table(group$Group))
.Summary <- function(db, type){
# type <- "Peptide"
# db <- subset(eDB, Type == "SB")
print(class(db))
if("RAPIMHC" %in% class(db)){
group <- do.call(rbind,str_split(db$Allele,"\\*"))
genes <- do.call(rbind, str_split(group[,2],":"))
group <- data.frame(Group = group[,1], Gene=genes[,1], Variant = genes[,2])
}else{
# db <- subset(mchii, Type =="SB")
Group <- str_split(db$Allele,"_")
Group <- unlist(lapply(Group, function(x) as.character(x[1])))
Group[str_detect(Group,"HLA")] <- "HLA"
group <- data.frame(Group=as.factor(Group))
print(table(group$Group))
}
upep <- unique(db[,type])
tab <-  bplapply(upep, function(x){
id <- which(db[,type] == x)
c(Pos =db$Pos[id][1], table(group$Group[id]))
}, BPPARAM = MulticoreParam(workers = 3))
ll<- do.call(rbind,tab)
rownames(ll) <- upep
return(ll)
}
PepII <- Summary(mchii)
write.xlsx(PepII$SB, file ="/home/elmer/Elmer/Covid19/YP_009724390.1.MHCII_SB.xlsx", rowNames=TRUE)
write.xlsx(PepII$WB, file ="/home/elmer/Elmer/Covid19/YP_009724390.1.MHCII_WB.xlsx", rowNames=TRUE)
